#!/usr/bin/env bash

# Set the PPDB scripts directory
export PPDB_SCRIPTS_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/.." && pwd)"
echo "PPDB_SCRIPTS_DIR is set to: $PPDB_SCRIPTS_DIR"

# Function for checking environment variables
# Usage: check_var VARIABLE_NAME [DEFAULT_VALUE]
check_var() {
  if [ $# -lt 1 ]; then
    echo "Usage: check_var VARIABLE_NAME [DEFAULT_VALUE]" >&2
    if [[ "${BASH_SOURCE[0]}" != "$0" ]]; then
      return 1
    else
      exit 1
    fi
  fi

  local var_name="$1"
  local default_value="${2:-}"

  if [ -z "${!var_name:-}" ]; then
    if [ -n "$default_value" ]; then
      printf -v "$var_name" '%s' "$default_value"
    else
      echo "Error: variable '$var_name' is unset or empty." >&2
      if [[ "${BASH_SOURCE[0]}" != "$0" ]]; then
        return 1
      else
        exit 1
      fi
    fi
  fi
}

# Check that an environment variable is set to a valid directory
# Usage: check_env_dir VARIABLE_NAME
check_env_dir() {
    local varname="$1"
    local dir="${!varname}"
    if [[ -z "$dir" ]]; then
        echo "Environment variable $varname is not set."
        return 1
    elif [[ ! -d "$dir" ]]; then
        echo "Environment variable $varname does not point to a valid directory: $dir"
        return 2
    else
        echo "$varname points to valid dir: $dir"
        return 0
    fi
}

# Check that an environment variable is set to a valid file
# Usage: check_env_file VARIABLE_NAME
check_env_file() {
    local varname="$1"
    local file="${!varname}"
    if [[ -z "$file" ]]; then
        echo "Environment variable $varname is not set."
        return 1
    elif [[ ! -f "$file" ]]; then
        echo "Environment variable $varname does not point to a valid file: $file"
        return 2
    else
        echo "$varname points to valid file: $file"
        return 0
    fi
}

export -f check_var
export -f check_env_dir
export -f check_env_file

# Set the path, including subdirectories for scripts
for subdir in bq replication setups util; do
  export PATH="${PPDB_SCRIPTS_DIR}/$subdir:$PATH"
done

# GKE cluster setup
export GKE_CLUSTER_NAME="ppdb"  # Use a generic name for the cluster
