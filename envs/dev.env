#!/usr/bin/env bash

###############################################################################
# ppdb-dev environment setup script
#
# This sets up the cloud development environment for the PPDB project.
###############################################################################

# Prevent execution â€” this script must be sourced
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  echo "ERROR: This script must be sourced, not executed." >&2
  exit 1
fi

# Include the base environment setup
. "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/_base.env

# Set the variable for the development environment.
export PPDB_ENV="dev"

# == GCP ENVIRONMENT ==

# Set the GCP project name.
export GCP_PROJECT="ppdb-dev-438721"

# Set the service account name and email.
export SERVICE_ACCOUNT_NAME="ppdb-storage-manager"
export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${GCP_PROJECT}.iam.gserviceaccount.com"

# Set the account credentials file.
export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.gcp/${GCP_PROJECT}/keys/${SERVICE_ACCOUNT_NAME}-key.json"
check_env_file "GOOGLE_APPLICATION_CREDENTIALS"

# FIXME: The gloud commands should be moved to a separate script or function.

# Set the current service account.
# export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${GCP_PROJECT}.iam.gserviceaccount.com"
# gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS"
# gcloud config set account ${SERVICE_ACCOUNT_EMAIL}

# Set the current project.
gcloud config set project ${GCP_PROJECT}

# == GENERAL ENVIRONMENT ==

# AWS credentials that are required for reading APDB config files from S3.
export AWS_SHARED_CREDENTIALS_FILE=$HOME/.aws/aws-credentials.ini
check_env_file "AWS_SHARED_CREDENTIALS_FILE" || return $?

# This is the primary GCS bucket used for PPDB file staging.
export GCS_BUCKET="ppdb-dev"

# Default GCP region.
export GCP_REGION="us-central1"

# The dataset ID of the BigQuery database containing the PPDB.
export DATASET_ID="ppdb_lsstcam"

# GKE cluster setup
export GKE_WORKLOAD_POOL="${GCP_PROJECT}.svc.id.goog"

# == PPDB REPLICATION ENVIRONMENT ==

# Config file for the APDB used for PPDB replication.
export APDB_CONFIG_FILE="s3://embargo@rubin-summit-users/apdb_config/cassandra/pp_apdb_lsstcam.yaml"

# Name of the PPDB schema used for replication.
# In the cloud-based architecture, this schema is only used for tracking chunk
# statuses with the "PpdbReplicaChunk" table.
export PPDB_SCHEMA_NAME="ppdb_dm50562"

# The PPDB config file for the current schema.
export PPDB_CONFIG_FILE="/sdf/data/rubin/user/jeremym/dev/DM-50563/ppdb-config/${PPDB_SCHEMA_NAME}.yaml"
check_env_file "PPDB_CONFIG_FILE" || return $?

# The local staging directory for PPDB files.
export PPDB_STAGING_DIR="/sdf/data/rubin/user/jeremym/ppdb_staging/dm50562"

# The directory where the PPDB config files are stored.
export PPDB_CONFIG_DIR="/sdf/data/rubin/user/jeremym/dev/DM-50563/ppdb-config"
check_env_dir "PPDB_CONFIG_DIR" || return $?

# == REPLICA CHUNK TRACKING DATABASE ENVIRONMENT ==

# These define the configuration for connecting to the Postgres database used
# for managing and tracking replica chunks, e.g., using the
# "PpdbReplicaChunk" table in the current dax_ppdb architecture. The settings
# below are for the CNPG instance in the GKE cluster. The prod env is not
# configured in this way yet. (The replication still uses a local USDF db in
# that environment.)

# Externally accessible IP address which can be used for on-premises access,
# e.g., from SLAC/USDF.
export PPDB_DB_HOST_EXTERNAL="34.28.177.170"

# Internal IP address for use inside cloud functions, which cannot see the
# external one.
# FIXME: This should use a private DNS name instead.
export PPDB_DB_HOST_INTERNAL="10.108.5.4"

# The database name of the schema which has the "PpdbReplicaChunk" table.
# This is specified for now by the PPDB_SCHEMA_NAME variable defined above.
export PPDB_DB_NAME="appdb"

# The user name for the Postgres database.
export PPDB_DB_USER="ppdb_pg_user"

# The full engine URL of the Postgres database.
# This should only be used for external connections.
export PPDB_DB_URL="postgresql://${PPDB_DB_USER}@${PPDB_DB_HOST_EXTERNAL}:5432/${PPDB_DB_NAME}"

# DEBUG is extremely verbose and not recommended for normal use. Set it
# manually in the terminal if needed.
export LOG_LEVEL="INFO"
